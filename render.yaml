# Define a group for only the static environment variables
envVarGroups:
  - name: myapp-static-env
    envVars:
      - key: FLASK_APP
        value: wsgi.py
      - key: SECRET_KEY
        generateValue: true

services:
  # 1. The Redis Cache & Celery Broker Service
  - type: redis
    name: myapp-redis
    plan: free
    ipAllowList: [] # Allows access from other Render services in your account

  # 2. The Flask Web Service (Gunicorn)
  - type: web
    name: myapp-web
    runtime: docker # Explicitly tell Render to use Docker
    plan: free
    dockerfilePath: ./Dockerfile
    dockerCommand: "gunicorn -c gunicorn.conf.py wsgi:app"
    envVars:
      - fromGroup: myapp-static-env # Use the static group
      # Define dynamic variables directly in the service
      - key: DATABASE_URL
        fromDatabase:
          name: myapp-db
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString

  # 3. The Celery Beat Scheduler (Background Worker)
  - type: worker
    name: myapp-scheduler
    runtime: docker # Explicitly tell Render to use Docker
    plan: free
    dockerfilePath: ./Dockerfile
    dockerCommand: "celery -A app.celery_app.celery beat -l info"
    envVars:
      - fromGroup: myapp-static-env # Use the static group
      - key: DATABASE_URL
        fromDatabase:
          name: myapp-db
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString

  # 4. The Celery Worker (Background Worker)
  - type: worker
    name: myapp-worker
    runtime: docker # Explicitly tell Render to use Docker
    plan: free
    dockerfilePath: ./Dockerfile
    dockerCommand: "celery -A run_celery.celery worker -l info"
    envVars:
      - fromGroup: myapp-static-env # Use the static group
      - key: DATABASE_URL
        fromDatabase:
          name: myapp-db
          property: connectionString
      - key: CACHE_REDIS_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: myapp-redis
          property: connectionString

# Define managed databases separately from other services
databases:
  # 5. The PostgreSQL Database Service
  - name: myapp-db
    plan: free
    postgresMajorVersion: 16